{"ast":null,"code":"var _jsxFileName = \"/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordSongs = () => {\n  _s();\n\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: \"Ol\\xE1\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 12\n  }, this); // const [songs, setSongs] = useState([]);\n  // const [record, setRecord] = useState({});\n  // const [playSong, setPlaySong] = useState(false);\n  // const [urlSong, setUrlSong] = useState(\"\");\n  // const [pathImage, setPathImage] = useState(\"\");\n  // const firesSong = (audioId: String) => {\n  //     setPlaySong(true);\n  //     setUrlSong(apiURL + \"/audio/play/\" + audioId);\n  // }\n  // useEffect(() => {\n  //     setRecord(location.state.record);\n  //     setPathImage(apiURL.replace(\"api\", \"\") + record.pathImage);\n  // }, [location]);\n  // useEffect(() => {\n  //     getAudioByRecord(record._id).then((data)=>{\n  //         setSongs(data);\n  //     });\n  // }, [record._id]);\n\n  /*return (\n      <div className=\"record-container\">\n          <Nav></Nav>\n          {playSong ? <SongPlayer name={urlSong} /> : null}\n          <div className=\"album-cover\" style={{ backgroundImage: `url(${pathImage})` }}></div>\n          <div className=\"songs-list\">\n          <div className=\"album-title\">{record.title}</div>\n          <div className=\"album-title\" style={{ fontSize: 20 }}>\n              {record.band.name}\n          </div>\n          {\n              songs.map(song => (\n              <div className=\"song-item\">\n                  <div className=\"song-info\">\n                  <div className=\"song-play\" onClick={() => firesSong(song._id)}>\n                      <i className=\"fa fa-play\"></i>\n                  </div>\n                  <span className=\"song-title\">{song.title}</span>\n                  <span className=\"song-author\">{song.authors.map(author => (author.name))}</span>\n                  </div>\n                  <div className=\"song-action\">\n                  <i className=\"fa fa-heart\"></i>\n                  <i className=\"fa fa-plus\"></i>\n                  </div>\n              </div>\n              ))}\n          </div>\n      </div>\n  );*/\n};\n\n_s(RecordSongs, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = RecordSongs;\nexport default RecordSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordSongs\");","map":{"version":3,"sources":["/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx"],"names":["React","useLocation","RecordSongs","location"],"mappings":";;;AAAA,OAAOA,KAAP,MAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAO,8BAAP;AACA,OAAO,oBAAP;;;AAOA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP,CAJsB,CAMtB;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;;AAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACC,CAjED;;GAAMC,W;UAEeD,W;;;KAFfC,W;AAmEN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\n\nimport { apiURL } from \"../../utils/Global\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\n\nconst RecordSongs = () => {\n\n    const location = useLocation();\n\n    return(<h1>Ol√°</h1>);\n\n    // const [songs, setSongs] = useState([]);\n    // const [record, setRecord] = useState({});\n    // const [playSong, setPlaySong] = useState(false);\n    // const [urlSong, setUrlSong] = useState(\"\");\n    // const [pathImage, setPathImage] = useState(\"\");\n\n    // const firesSong = (audioId: String) => {\n    \n    //     setPlaySong(true);\n    //     setUrlSong(apiURL + \"/audio/play/\" + audioId);\n        \n    // }\n\n    // useEffect(() => {\n\n    //     setRecord(location.state.record);\n    //     setPathImage(apiURL.replace(\"api\", \"\") + record.pathImage);\n\n    // }, [location]);\n\n    // useEffect(() => {\n\n    //     getAudioByRecord(record._id).then((data)=>{\n\n    //         setSongs(data);\n      \n    //     });\n\n    // }, [record._id]);\n\n    /*return (\n        <div className=\"record-container\">\n            <Nav></Nav>\n            {playSong ? <SongPlayer name={urlSong} /> : null}\n            <div className=\"album-cover\" style={{ backgroundImage: `url(${pathImage})` }}></div>\n            <div className=\"songs-list\">\n            <div className=\"album-title\">{record.title}</div>\n            <div className=\"album-title\" style={{ fontSize: 20 }}>\n                {record.band.name}\n            </div>\n            {\n                songs.map(song => (\n                <div className=\"song-item\">\n                    <div className=\"song-info\">\n                    <div className=\"song-play\" onClick={() => firesSong(song._id)}>\n                        <i className=\"fa fa-play\"></i>\n                    </div>\n                    <span className=\"song-title\">{song.title}</span>\n                    <span className=\"song-author\">{song.authors.map(author => (author.name))}</span>\n                    </div>\n                    <div className=\"song-action\">\n                    <i className=\"fa fa-heart\"></i>\n                    <i className=\"fa fa-plus\"></i>\n                    </div>\n                </div>\n                ))}\n            </div>\n        </div>\n    );*/\n}\n\nexport default RecordSongs;\n"]},"metadata":{},"sourceType":"module"}