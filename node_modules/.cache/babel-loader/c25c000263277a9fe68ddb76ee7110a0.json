{"ast":null,"code":"var _jsxFileName = \"/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.js\";\nimport React, { Component } from \"react\";\nimport \"../../assets/scss/style.scss\";\nimport { apiURL } from \"../../utils/Global\";\nimport \"./RecordSongs.scss\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass RecordSongs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.firesSong = this.firesSong.bind(this);\n    this.state = {\n      playSong: false,\n      audios: [],\n      urlAudio: \"\"\n    };\n    this.record = this.props.location.state.record;\n  }\n\n  componentDidMount() {\n    getAudioByRecord(this.props.match.params.record_id).then(data => {\n      this.setState({\n        audios: data\n      });\n    });\n  }\n\n  firesSong(audioId) {\n    console.log(apiURL + \"/audio/play/\" + audioId);\n    this.setState({\n      playSong: true,\n      urlAudio: apiURL + \"/audio/play/\" + audioId\n    });\n  }\n\n  render() {\n    const pathImage = apiURL.replace(\"api\", \"\") + this.record.pathImage; //background-image: linear-gradient(270deg, rgba(37, 46, 57, 0), rgb(37, 46, 57) 80%), url(\"https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ed33d5a388aecfcb7dd89480fe1569968ce4a7e0a127e02897b49d5086d05398._RI_V_TTW_SX1500_BL40_FMJPG_.jpg\");\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"record-container\",\n      children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), this.state.playSong ? /*#__PURE__*/_jsxDEV(SongPlayer, {\n        name: this.state.urlAudio\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-cover\",\n        style: {\n          backgroundImage: `url(${pathImage})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"songs-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-title\",\n          children: this.record.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"album-title\",\n          style: {\n            fontSize: 20\n          },\n          children: this.record.band.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), this.state.audios.map(audio => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"song-play\",\n              onClick: () => this.firesSong(audio._id),\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa fa-play\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"song-title\",\n              children: audio.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"song-author\",\n              children: audio.authors.map(author => author.name)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-action\",\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-heart\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-plus\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default RecordSongs;","map":{"version":3,"sources":["/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.js"],"names":["React","Component","apiURL","SongPlayer","Nav","getAudioByRecord","RecordSongs","constructor","props","state","firesSong","bind","playSong","audios","urlAudio","record","location","componentDidMount","match","params","record_id","then","data","setState","audioId","console","log","render","pathImage","replace","backgroundImage","title","fontSize","band","name","map","audio","_id","authors","author"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport \"../../assets/scss/style.scss\";\n\nimport { apiURL } from \"../../utils/Global\";\nimport \"./RecordSongs.scss\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\n\nclass RecordSongs extends Component {\n\n  state = {};\n\n  constructor(props) {\n\n    super(props);\n\n    this.firesSong = this.firesSong.bind(this);\n    this.state = { playSong: false, audios: [], urlAudio: \"\" };\n\n    this.record = this.props.location.state.record;\n\n  }\n\n  componentDidMount(){\n\n    getAudioByRecord(this.props.match.params.record_id).then((data)=>{\n\n      this.setState({audios: data});\n      \n\n    })\n\n  }\n\n  firesSong(audioId) {\n\n    console.log(apiURL + \"/audio/play/\" + audioId);\n\n    this.setState({ playSong: true, urlAudio: apiURL + \"/audio/play/\" + audioId });\n    \n  }\n\n  render() {\n\n    const pathImage = apiURL.replace(\"api\", \"\") + this.record.pathImage;\n    //background-image: linear-gradient(270deg, rgba(37, 46, 57, 0), rgb(37, 46, 57) 80%), url(\"https://images-na.ssl-images-amazon.com/images/S/pv-target-images/ed33d5a388aecfcb7dd89480fe1569968ce4a7e0a127e02897b49d5086d05398._RI_V_TTW_SX1500_BL40_FMJPG_.jpg\");\n\n    return (\n      <div className=\"record-container\">\n        <Nav></Nav>\n        {this.state.playSong ? <SongPlayer name={this.state.urlAudio} /> : null}\n        <div className=\"album-cover\" style={{ backgroundImage: `url(${pathImage})` }}></div>\n        <div className=\"songs-list\">\n          <div className=\"album-title\">{this.record.title}</div>\n          <div className=\"album-title\" style={{ fontSize: 20 }}>\n            {this.record.band.name}\n          </div>\n          {\n            this.state.audios.map(audio => (\n              <div className=\"song-item\">\n                <div className=\"song-info\">\n                  <div className=\"song-play\" onClick={() => this.firesSong(audio._id)}>\n                    <i className=\"fa fa-play\"></i>\n                  </div>\n                  <span className=\"song-title\">{audio.title}</span>\n                  <span className=\"song-author\">{audio.authors.map(author => ( author.name))}</span>\n                </div>\n                <div className=\"song-action\">\n                  <i className=\"fa fa-heart\"></i>\n                  <i className=\"fa fa-plus\"></i>\n                </div>\n              </div>\n            ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default RecordSongs;\n"]},"metadata":{},"sourceType":"module"}