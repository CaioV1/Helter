{"ast":null,"code":"var _jsxFileName = \"/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\nimport { apiURL } from \"../../utils/Global\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordSongs = () => {\n  _s();\n\n  const {\n    state\n  } = useLocation();\n  const [songs, setSongs] = useState([]);\n  const [record, setRecord] = useState(state.record);\n  const [playSong, setPlaySong] = useState(false);\n  const [urlSong, setUrlSong] = useState(\"\");\n  const pathImage = apiURL.replace(\"api\", \"\") + record.pathImage;\n\n  const firesSong = audioId => {\n    setPlaySong(true);\n    setUrlSong(apiURL + \"/audio/play/\" + audioId);\n  };\n\n  useEffect(() => {\n    getAudioByRecord(record._id).then(data => {\n      setSongs(data);\n    });\n  }, [record._id]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"record-container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), playSong ? /*#__PURE__*/_jsxDEV(SongPlayer, {\n      name: urlSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-cover\",\n      style: {\n        backgroundImage: `url(${pathImage})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-title\",\n        children: record.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-title\",\n        style: {\n          fontSize: 20\n        },\n        children: record.band.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-play\",\n            onClick: () => firesSong(song._id),\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fa fa-play\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-title\",\n            children: song.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"song-author\",\n            children: song.authors.map(author => author.name)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"song-action\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-heart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-plus\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordSongs, \"hXI33nVA2sn6UkgJwf09Qpzd9C0=\", false, function () {\n  return [useLocation];\n});\n\n_c = RecordSongs;\nexport default RecordSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordSongs\");","map":{"version":3,"sources":["/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx"],"names":["React","useState","useEffect","useLocation","apiURL","SongPlayer","Nav","getAudioByRecord","RecordSongs","state","songs","setSongs","record","setRecord","playSong","setPlaySong","urlSong","setUrlSong","pathImage","replace","firesSong","audioId","_id","then","data","backgroundImage","title","fontSize","band","name","map","song","authors","author"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\n\nimport { apiURL } from \"../../utils/Global\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\n\nconst RecordSongs = () => {\n\n    const { state } = useLocation();\n\n    const [songs, setSongs] = useState([]);\n    const [record, setRecord] = useState(state.record);\n    const [playSong, setPlaySong] = useState(false);\n    const [urlSong, setUrlSong] = useState(\"\");\n\n    const pathImage = apiURL.replace(\"api\", \"\") + record.pathImage;\n\n    const firesSong = (audioId: String) => {\n    \n        setPlaySong(true);\n        setUrlSong(apiURL + \"/audio/play/\" + audioId);\n        \n    }\n\n    useEffect(() => {\n\n        getAudioByRecord(record._id).then((data)=>{\n\n            setSongs(data);\n      \n        });\n\n    }, [record._id]);\n\n    return (\n        <div className=\"record-container\">\n            <Nav></Nav>\n            {playSong ? <SongPlayer name={urlSong} /> : null}\n            <div className=\"album-cover\" style={{ backgroundImage: `url(${pathImage})` }}></div>\n            <div className=\"songs-list\">\n            <div className=\"album-title\">{record.title}</div>\n            <div className=\"album-title\" style={{ fontSize: 20 }}>\n                {record.band.name}\n            </div>\n            {\n                songs.map(song => (\n                <div className=\"song-item\">\n                    <div className=\"song-info\">\n                    <div className=\"song-play\" onClick={() => firesSong(song._id)}>\n                        <i className=\"fa fa-play\"></i>\n                    </div>\n                    <span className=\"song-title\">{song.title}</span>\n                    <span className=\"song-author\">{song.authors.map(author => (author.name))}</span>\n                    </div>\n                    <div className=\"song-action\">\n                    <i className=\"fa fa-heart\"></i>\n                    <i className=\"fa fa-plus\"></i>\n                    </div>\n                </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default RecordSongs;\n"]},"metadata":{},"sourceType":"module"}