{"ast":null,"code":"var _jsxFileName = \"/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\nimport { apiURL } from \"../../utils/Global\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst RecordSongs = () => {\n  _s();\n\n  const location = useLocation();\n  const [songs, setSongs] = useState([]);\n  const [record, setRecord] = useState(location.state.record);\n  const [playSong, setPlaySong] = useState(false);\n  const [urlSong, setUrlSong] = useState(\"\");\n  const [pathImage, setPathImage] = useState(\"\");\n\n  const firesSong = audioId => {\n    setPlaySong(true);\n    setUrlSong(apiURL + \"/audio/play/\" + audioId);\n  };\n\n  useEffect(() => {\n    setPathImage(apiURL.replace(\"api\", \"\") + record.pathImage);\n    getAudioByRecord(record._id).then(data => {\n      setSongs(data);\n      console.log(songs);\n    });\n  }, [record]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"record-container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), playSong ? /*#__PURE__*/_jsxDEV(SongPlayer, {\n      name: urlSong\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 25\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"album-cover\",\n      style: {\n        backgroundImage: `url(${pathImage})`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"songs-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-title\",\n        children: record.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"album-title\",\n        style: {\n          fontSize: 20\n        },\n        children: record.band.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), songs.map(song => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"song-item\",\n        children: song.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n\n_s(RecordSongs, \"8mqnuu5mc2kYPV+EjmDpEyueNms=\", false, function () {\n  return [useLocation];\n});\n\n_c = RecordSongs;\nexport default RecordSongs;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecordSongs\");","map":{"version":3,"sources":["/Users/caiomorais/Documents/Codes/Projetos/helter/src/pages/RecordSongs/RecordSongs.tsx"],"names":["React","useState","useEffect","useLocation","apiURL","SongPlayer","Nav","getAudioByRecord","RecordSongs","location","songs","setSongs","record","setRecord","state","playSong","setPlaySong","urlSong","setUrlSong","pathImage","setPathImage","firesSong","audioId","replace","_id","then","data","console","log","backgroundImage","title","fontSize","band","name","map","song"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,OAAO,8BAAP;AACA,OAAO,oBAAP;AAEA,SAASC,MAAT,QAAuB,oBAAvB;AACA,OAAOC,UAAP,MAAuB,wCAAvB;AACA,OAAOC,GAAP,MAAgB,0BAAhB;AACA,SAASC,gBAAT,QAAiC,6BAAjC;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAEtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBZ,QAAQ,CAACQ,QAAQ,CAACK,KAAT,CAAeF,MAAhB,CAApC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;;AAEA,QAAMoB,SAAS,GAAIC,OAAD,IAAqB;AAEnCN,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,IAAAA,UAAU,CAACd,MAAM,GAAG,cAAT,GAA0BkB,OAA3B,CAAV;AAEH,GALD;;AAOApB,EAAAA,SAAS,CAAC,MAAM;AAEZkB,IAAAA,YAAY,CAAChB,MAAM,CAACmB,OAAP,CAAe,KAAf,EAAsB,EAAtB,IAA4BX,MAAM,CAACO,SAApC,CAAZ;AAEAZ,IAAAA,gBAAgB,CAACK,MAAM,CAACY,GAAR,CAAhB,CAA6BC,IAA7B,CAAmCC,IAAD,IAAQ;AAEtCf,MAAAA,QAAQ,CAACe,IAAD,CAAR;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AAEH,KAND;AAQH,GAZQ,EAYN,CAACE,MAAD,CAZM,CAAT;AAcA,sBACI;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA,4BACI,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKG,QAAQ,gBAAG,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAH,GAAmC,IAFhD,eAGI;AAAK,MAAA,SAAS,EAAC,aAAf;AAA6B,MAAA,KAAK,EAAE;AAAEY,QAAAA,eAAe,EAAG,OAAMV,SAAU;AAApC;AAApC;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BACA;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BP,MAAM,CAACkB;AAArC;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAK,QAAA,SAAS,EAAC,aAAf;AAA6B,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAApC;AAAA,kBACKnB,MAAM,CAACoB,IAAP,CAAYC;AADjB;AAAA;AAAA;AAAA;AAAA,cAFA,EAMIvB,KAAK,CAACwB,GAAN,CAAUC,IAAI,iBACd;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,kBACKA,IAAI,CAACL;AADV;AAAA;AAAA;AAAA;AAAA,cADA,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAlDD;;GAAMtB,W;UAEeL,W;;;KAFfK,W;AAoDN,eAAeA,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport { Record } from \"../../interfaces/record\";\n\nimport \"../../assets/scss/style.scss\";\nimport \"./RecordSongs.scss\";\n\nimport { apiURL } from \"../../utils/Global\";\nimport SongPlayer from \"../../components/SongPlayer/SongPlayer\";\nimport Nav from \"../../components/Nav/Nav\";\nimport { getAudioByRecord } from \"../../services/AudioService\";\n\nconst RecordSongs = () => {\n\n    const location = useLocation<any>();\n\n    const [songs, setSongs] = useState([]);\n    const [record, setRecord] = useState(location.state.record);\n    const [playSong, setPlaySong] = useState(false);\n    const [urlSong, setUrlSong] = useState(\"\");\n    const [pathImage, setPathImage] = useState(\"\");\n\n    const firesSong = (audioId: String) => {\n    \n        setPlaySong(true);\n        setUrlSong(apiURL + \"/audio/play/\" + audioId);\n        \n    }\n\n    useEffect(() => {\n\n        setPathImage(apiURL.replace(\"api\", \"\") + record.pathImage);\n\n        getAudioByRecord(record._id).then((data)=>{\n\n            setSongs(data);\n\n            console.log(songs);            \n      \n        });\n\n    }, [record]);\n\n    return (\n        <div className=\"record-container\">\n            <Nav></Nav>\n            {playSong ? <SongPlayer name={urlSong} /> : null}\n            <div className=\"album-cover\" style={{ backgroundImage: `url(${pathImage})` }}></div>\n            <div className=\"songs-list\">\n            <div className=\"album-title\">{record.title}</div>\n            <div className=\"album-title\" style={{ fontSize: 20 }}>\n                {record.band.name}\n            </div>\n            {\n                songs.map(song => (\n                <div className=\"song-item\">\n                    {song.title}\n                </div>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default RecordSongs;\n"]},"metadata":{},"sourceType":"module"}